package bitcamp.java110.cms.dao.impl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import bitcamp.java110.cms.annotaion.Component;
import bitcamp.java110.cms.dao.DaoException;
import bitcamp.java110.cms.dao.TeacherDao;
import bitcamp.java110.cms.domain.Teacher;

@Component
public class TeacherJdbcDao implements TeacherDao{
    
    public int insert(Teacher teacher) {
        
        Connection con=null;
        Statement stmt=null;
        ResultSet autogeneratedKeys=null;
        
        try {
            Class.forName("org.mariadb.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mariadb://localhost:3306/studydb", "study", "1111");
            
            con.setAutoCommit(false);
            
            stmt=con.createStatement();
            String sql=" insert into p1_memb(name,email,pwd,tel,cdt)"
                     + " values('"+teacher.getName()+"' "
                     + " , '"+teacher.getEmail()+"'     "
                     + " , '"+teacher.getPassword()+"   "
                     + " , '"+teacher.getTel()+"'       "
                     + " ,now() )                       ";
            
            stmt.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
            
            autogeneratedKeys=stmt.getGeneratedKeys();
            autogeneratedKeys.next();
            int memberNo=autogeneratedKeys.getInt(1);
            autogeneratedKeys.close();
            
            String sql2=" insert into p1_tchr(tno,hrpay,subj)"
                    +   " values("+memberNo
                    + ",'"+teacher.getPay()+"'"
                    + ",'"+teacher.getSubjects()+"' )";
            
            stmt.executeQuery(sql2);
            
            con.commit();
            return 1;
             
        } catch (Exception e) {
            throw new DaoException(e);
        }finally {
            try{stmt.close();} catch(Exception e) {}
            try{con.close();} catch(Exception e) {}
        }
    }
    
    public List<Teacher> findAll() {
        ArrayList<Teacher> list=new ArrayList<>();
        Connection con=null;
        Statement stmt=null;
        ResultSet rs=null;
        try {
            Class.forName("org.mariadb.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mariadb://localhost:3306/studydb", "study", "1111");

            stmt = con.createStatement();

            rs=stmt.executeQuery("     select m.mno,m.name, m.email, tr.hrpay, tr.subj      " + 
                    "       from p1_tchr tr                        " + 
                    "       join p1_memb m                        " + 
                    "         on tr.tno=m.mno                    "  );
            //서버에 생성된 질의 결과를 한 개씩 가져온다.
            while(rs.next()) {
                Teacher tr=new Teacher();
                tr.setNo(rs.getInt("mno"));
                tr.setEmail(rs.getString("email"));
                tr.setName(rs.getString("name"));
                tr.setPay(Integer.parseInt(rs.getString("hrpay")));
                tr.setSubjects(rs.getString("subj"));
                list.add(tr);
            }
        }catch(Exception e){
            throw new DaoException(e);
        }finally {
            try{rs.close();} catch(Exception e) {}
            try{stmt.close();} catch(Exception e) {}
            try{con.close();} catch(Exception e) {}
        }
        return list; 
    }
    
    public Teacher findByNo(int no) {
        Connection con=null;
        Statement stmt=null;
        ResultSet rs=null;
        try {
            Class.forName("org.mariadb.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mariadb://localhost:3306/studydb", "study", "1111");

            stmt = con.createStatement();

            rs=stmt.executeQuery("     select m.mno, m.name, m.email, m.tel, tr.hrpay, tr.subj    " + 
                                 "       from p1_tchr tr                        " + 
                                 "       join p1_memb m                        " + 
                                 "         on tr.mrno=m.mno                    " +
                                 "        where m.email='"+no+"'");
            if(rs.next()) {
                Teacher tr=new Teacher();
                tr.setNo(rs.getInt("mno"));
                tr.setEmail(rs.getString("email"));
                tr.setName(rs.getString("name"));
                tr.setTel(rs.getString("tel"));
                tr.setPay(Integer.parseInt(rs.getString("hrpay")));
                tr.setSubjects(rs.getString("subj"));

                return tr;
            }
            return null;
        }catch(Exception e){
            throw new DaoException(e);
        }finally {
            try{rs.close();} catch(Exception e) {}
            try{stmt.close();} catch(Exception e) {}
            try{con.close();} catch(Exception e) {}
        }
         
    }
    
    public int deleteByNo(int no) {
        Connection con=null;
        Statement stmt=null;
        try {
            
            
            Class.forName("org.mariadb.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mariadb://localhost:3306/studydb", "study", "1111");
            
            //트랜잭션 처리(기본적으로  자동커밋을 false값으로 바꾸어줌)
            con.setAutoCommit(false);
            
            stmt = con.createStatement();
            String sql="   delete from p1_tchr where tno= "+no;
            int count=stmt.executeUpdate(sql);
            if(count==0)
                return 0;
            
            String sql2="   delete from p1_memb where mno= "+no;
            stmt.executeUpdate(sql2);
            
            con.commit();
            return 1;
        }catch(Exception e){
            throw new DaoException(e);
        }finally {
            try{stmt.close();} catch(Exception e) {}
            try{con.close();} catch(Exception e) {}
        }
        
    }

    @Override
    public Teacher findByEmail(String email) {
        // TODO Auto-generated method stub
        return null;
    }

}
